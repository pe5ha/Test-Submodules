

//dev
let doNotLogDebug = false;
let doNotLogBotSending = false;
let doNotLog = false;

let BotName = "MONEYLANDschool_bot";
let BotTitle = "MONEYLAND";

let TutorChatId = table.getSheetByName("BotValues").getRange("A4").getValue();

// Bot Commands
let BotCommands = {
  // start: "/start",
  rules: "/rules",
  return: "/return"
}


let BotTextCommands = {
  rules: "üìò –ü—Ä–∞–≤–∏–ª–∞",
  return: "üéì –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–±—É—á–µ–Ω–∏—é",
  getReplyKeyboard(){
    return replyKeyboard = {
      keyboard: [[this.rules,this.return]],
      resize_keyboard: true
    };
  }
}

//User roles
let UserRoles = {
  without_role: "",
  admin: "admin",

}

// User tariff
let UserTariff = {
  premium: "–ü—Ä–µ–º–∏—É–º",
  basic: "–ë–∞–∑–æ–≤—ã–π"
}

//User Current Actions (use cases)
let UserActions = {
  without_action: "",
  read_story: "read_story",
  ask_question: "ask_question",
}

let AdminActions = {
  input_story: "input_story",
  input_button_title: "input_button_title",
  input_rules: "input_rules",
  input_return: "input_return"
}
let AdminCommands = {
  add_story: "/addstory",
  stop_input: "/stop_input",
  set_rules: "/setrules",
  set_return: "/setreturn",
  leave_story: "/leave",
  set_admin_chat: "/set_admin_chat",
  SET_ADMIN_CHAT(command,whithParam=false){
    return this.isThisCommand(this.set_admin_chat,command,whithParam);
  },
  ADD_STORY(command,whithParam=false){
    return this.isThisCommand(this.add_story,command,whithParam);
  },
  STOP_INPUT(command,whithParam=false){
    return this.isThisCommand(this.stop_input,command,whithParam);
  },
  SET_RULES(command,whithParam=false){
    return this.isThisCommand(this.set_rules,command,whithParam);
  },
  SET_RETURN(command,whithParam=false){
    return this.isThisCommand(this.set_return,command,whithParam);
  },
  LEAVE_STORY(command,whithParam=false){
    return this.isThisCommand(this.leave_story,command,whithParam);
  },
  
  isThisCommand(thisCommand,command,whithParam=false){
    if(whithParam){
      if(String(command).startsWith(thisCommand+" ")||String(command).startsWith(thisCommand+"\n")) return true;   
      if(String(command).startsWith(thisCommand+"@"+BotName+" ")||String(command).startsWith(thisCommand+"@"+BotName+"\n")) return true;
    }
    else{
      if(command==thisCommand) return true;
      if(command==thisCommand+"@"+BotName) return true;
    }
    return false;
  }
}

let ButtonsCallbacks = {
  rules: "rules",
  lesson_examples: "lesson_examples",
  need_tutor: "need_tutor",
  ask_question: "ask_question"
}

let BotStrings = {
  bot_start_message: "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç <b>"+BotTitle+"</b>",
  // start_message: {
  //   text: "–ë–æ—Ç "+BotName+" *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*",
  //   reply_markup: {inline_keyboard:[
  //     [{
  //       text: "–ü—Ä–∞–≤–∏–ª–∞",
  //       callback_data: ButtonsCallbacks.rules
  //     },{
  //       text: "–ü—Ä–∏–º–µ—Ä—ã –∏–∑ –∫—É—Ä—Å–∞",
  //       callback_data: ButtonsCallbacks.lesson_examples
  //     }],[{
  //       text: "–ó–∞–¥–∞—Ç—å –∫—É—Ä–∞—Ç–æ—Ä—É –≤–æ–ø—Ä–æ—Å",
  //       callback_data: ButtonsCallbacks.ask_question
  //     }]
  //   ]},
  //   parse_mode: "MarkdownV2"
  // },
  start_message_admin: {
    text: "–ê–¥–º–∏–Ω—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:"+
    "\n/addstory - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π"+
    "\n\n/setrules - –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ü–†–ê–í–ò–õ–ê"+
    "\n/setreturn - –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –í–ï–†–ù–£–¢–¨–°–Ø –Ω–∞ –≥–µ—Ç–∫—É—Ä—Å"
    // "\n/set_admin_chat - —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ —á–∞—Ç –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤"
  },
  addStory_instruction: {
    text:"<b>–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è –ø—Ä–∏—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ–º–∞–Ω–¥–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ—á–∫–µ.</b> –ü—Ä–∏–º–µ—Ä:\n\n"
  +AdminCommands.add_story+"\n–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∫—É—Ä—Å",
    parse_mode: "HTML"
  },
  question_instruction: {
    text: "–¢—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –∫—É—Ä—Å—É –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç!\n–í—Å–µ –¥–µ—Ç–∞–ª–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º —É–∫–∞–∑—ã–≤–∞–π –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏."
    +"\n–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ '?' üòä\n",
  }
}


// Story sheet structure
let tStories = {
  sheetName: "–í–æ—Ä–æ–Ω–∫–∏",
  message_adres_Title: "–ê–¥—Ä–µ—Å —Å–æ–æ–±—â–µ–Ω–∏—è",
  preview_Title: "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º)",
  tableWidth: 1,
  firstContentRow: 5,
  use(){
    return table.getSheetByName(this.sheetName);
  }
}

// Questions binding sheet structure
let tQuestions = {
  sheetName: "–í–æ–ø—Ä–æ—Å—ã",
  user_id_Title: "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  original_message_Title: "–û—Ä–∏–≥–∏–Ω–∞–ª",
  forwarded_message_Title: "–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ",
  text_Title: "–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞",
  allRange: "A:C",
  getColumnsOrder(){
    return [
      this.user_id_Title,
      this.original_message_Title,	
      this.forwarded_message_Title,
      this.text_Title,
    ];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    let sheet = table.getSheetByName(this.sheetName);
    if(!sheet){
      sheet = table.insertSheet(this.sheetName);
      let style = SpreadsheetApp.newTextStyle().setBold(true).setItalic(true).build();
      sheet.getRange(1,1,1,this.getColumnsOrder().length).setValues([this.getColumnsOrder()])
      .setTextStyle(style)
      .setHorizontalAlignment("center");
    }
    return sheet;
  }
}


// Users sheet structure
let tUsers = {
  sheetName: "Users",
  reg_date_Title: "–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
  id_Title: "id",
  nick_Title: "–Ω–∏–∫",
  name_Title: "–∏–º—è",
  current_action_Title: "—Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
  role_Title: "—Ä–æ–ª—å",
  tariff_Title: "—Ç–∞—Ä–∏—Ñ",
  allRange: "A:G",
  getColumnsOrder(){
    return [
      this.reg_date_Title,	
      this.id_Title,	
      this.nick_Title,	
      this.name_Title,	
      this.current_action_Title, 
      this.role_Title,
      this.tariff_Title
    ];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    return table.getSheetByName(this.sheetName);
  }
}

// Logs sheet structure
let LogSheet = {
  SheetName: "Log",
  time_Title: "–≤—Ä–µ–º—è",
  id_Title: "id",
  nick_Title: "–Ω–∏–∫",
  name_Title: "–∏–º—è",
  message_id_Title: "message id",
  action_Title: "–¥–µ–π—Å—Ç–≤–∏–µ",
  what_was_sent_Title: "—á—Ç–æ –ø—Ä–∏—Å–ª–∞–ª",
  bot_answer_Title: "–æ—Ç–≤–µ—Ç –±–æ—Ç–∞",
  getColumnsOrder(){
    return [this.time_Title,	this.id_Title,	this.nick_Title,	this.name_Title,	this.message_id_Title, this.action_Title,this.what_was_sent_Title,this.bot_answer_Title];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  }
}

// Debug sheet structure
let DebugSheet = {
  SheetName: "Debug",
}
